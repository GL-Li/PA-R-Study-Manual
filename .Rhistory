knitr::include_graphics("images/book-logo.png")
knitr::include_graphics("images/book-logo.png")
ExamPAData %>%
ggplot(aes(charges, age)) +
geom_point()
library(dplyr)
ExamPAData %>%
ggplot(aes(charges, age)) +
geom_point()
library(ExamPAData)
health_insurance %>%
ggplot(aes(charges, age)) +
geom_point()
library(tidyverse)
library(tidyverse)
health_insurance %>%
ggplot(aes(charges, age)) +
geom_point()
health_insurance %>%
ggplot(aes(charges, bmi)) +
geom_point()
health_insurance %>%
ggplot(aes(charges, bmi)) +
geom_point() +
geom_smooth()
?geom_smooth
health_insurance %>%
ggplot(aes(charges, bmi)) +
geom_point() +
geom_smooth(method = "glm", formula = "charges ~ bmi + age")
health_insurance
model <- lm(data = health_insurance, charges ~ bmi + age)
health_insurance %>%
mutate(y_hat = predict(model, health_insurance))
health_insurance %>%
mutate(y_hat = predict(model, health_insurance)) %>%
ggplot(aes(charges, bmi)) +
geom_point()
health_insurance %>%
mutate(y_hat = predict(model, health_insurance)) %>%
ggplot(aes(y_hat, bmi)) +
geom_point()
health_insurance %>%
mutate(y_hat = predict(model, health_insurance)) %>%
ggplot(aes(charges, bmi)) +
geom_point()
health_insurance %>%
mutate(y_hat = predict(model, health_insurance)) %>%
ggplot(aes(charges, bmi)) +
geom_point() +
geom_smooth(method = "lm")
health_insurance %>%
mutate(y_hat = predict(model, health_insurance)) %>%
ggplot(aes(charges, bmi)) +
geom_point() +
geom_smooth(method = "lm", se = F)
library(ExamPAData)
library(tidyverse)
model <- lm(data = health_insurance, charges ~ bmi)
health_insurance %>%
ggplot(aes(bmi, charges)) +
geom_point() +
geom_smooth(method = "lm", se = F)
model
tibble(y = rnorm(10, 0, 1),
x = y + 0.2*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point()
tibble(y = rnorm(10, 0, 1),
x = y + 0.2*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth()
tibble(y = rnorm(10, 0, 1),
x = y + 0.2*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method = "lm")
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method = "lm", se = F)
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method = "lm", se = F)
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_minimal()
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_minimal() +
scale_colour_manual(name="legend", values=c("blue", "red"))
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(color = "A")) +
theme_minimal() +
scale_colour_manual(name="legend", values=c("blue", "red"))
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point() +
geom_smooth(method = "lm", se = F, aes(color = "linear regression")) +
theme_minimal() +
scale_colour_manual(name="legend", values=c("blue", "red"))
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(color = "Training data")) +
geom_smooth(method = "lm", se = F, aes(color = "linear regression")) +
theme_minimal() +
scale_colour_manual(name="legend", values=c("blue", "red"))
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(color = "Training data"), color = "black") +
geom_smooth(method = "lm", se = F, aes(color = "linear regression")) +
theme_minimal() +
scale_colour_manual(name="legend", values=c("blue", "red"))
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(color = "Training data", color = "black")) +
geom_smooth(method = "lm", se = F, aes(color = "linear regression")) +
theme_minimal() +
scale_colour_manual(name="legend", values=c("blue", "red"))
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "Training data", color = "black")) +
geom_smooth(method = "lm", se = F, aes(color = "linear regression")) +
theme_minimal() +
scale_colour_manual(name="legend", values=c("blue", "red"))
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "Training data")) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression")) +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red"))
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "Training data")) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression")) +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red")) +
theme(legend.position = "top")
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "Training data")) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression"), color = "red") +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red")) +
theme(legend.position = "top")
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "training data")) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression"), color = "red") +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red")) +
theme(legend.position = "top")
library(ExamPAData)
library(tidyverse)
model <- lm(data = health_insurance, charges ~ bmi + age + sex)
health_insurance %>%
ggplot(aes(bmi, charges)) +
geom_point() +
geom_smooth(method = "lm", se = F)
model
coefficients(model)
health_insurance %>% head(1)
pred = predict(model, health_insurance)
pred %>% head()
model <- lm(data = health_insurance, charges ~ bmi + age + sex)
pred = predict(model, health_insurance)
coefficients(model)
pred %>% head()
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "training data", color = "black")) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression"), color = "red") +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red")) +
theme(legend.position = "top")
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "training data"), show.legend = F) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression"), color = "red") +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red")) +
theme(legend.position = "top")
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "training data"), show.legend = T) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression"), color = "red") +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red")) +
theme(legend.position = "top")
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "training data"), show.legend = T) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression"), color = "red", show.legend = F) +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red")) +
theme(legend.position = "top")
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point(aes(fill = "training data"), show.legend = F) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression"), color = "red", show.legend = T) +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red")) +
theme(legend.position = "top")
tibble(y = rnorm(10, 0, 1),
x = y + 0.4*rnorm(10,0, 1)) %>%
ggplot(aes(x,y)) +
geom_point( show.legend = F) +
geom_smooth(method = "lm", se = F, aes(fill = "linear regression"), color = "red", show.legend = T) +
theme_minimal() +
scale_fill_manual(name="legend", values=c("blue", "red")) +
theme(legend.position = "top")
tibble(y = 10 + exp(rnorm(100))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
ggplot(aes(value)) +
facet_wrap(vars(stat))
tibble(y = 10 + exp(rnorm(100))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat))
tibble(y = exp(rnorm(100))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat))
tibble(y = exp(rnorm(100))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value)
tibble(y = exp(rnorm(100))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = fct_relevel(stat, c("log_y", "y")))) %>%
tibble(y = exp(rnorm(100))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = fct_relevel(stat, c("log_y", "y"))) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat))
tibble(y = exp(rnorm(100))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = fct_relevel(stat, c("y","log_y"))) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat))
tibble(y = exp(rnorm(100))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = fct_relevel(stat, c("y","log_y"))) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat), scales = "free")
tibble(y = exp(rnorm(1000))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = fct_relevel(stat, c("y","log_y"))) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat), scales = "free")
tibble(y = exp(rnorm(1000))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = fct_relevel(stat, c("y","log_y"))) %>%
mutate(stat = ifelse(stat == "y", "Before Log Transform", "After Log Transform")) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat), scales = "free") +
theme_minimal()
tibble(y = exp(rnorm(1000))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = ifelse(stat == "y", "Before Log Transform", "After Log Transform") %>%
fct_relevel(c("Before Log Transform", "After Log Transform"))) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat), scales = "free") +
theme_minimal()
knitr::include_graphics("images/glm_links.png")
health_insurance
?rpart
tree <- rpart(charges ~ age + sex, data = health_insurance)
library(rpart)
tree <- rpart(charges ~ age + sex, data = health_insurance)
rpart.plot(tree)
library(rpart.plot)
tree <- rpart(charges ~ age + sex, data = health_insurance)
rpart.plot(tree)
?rpart.plot
rpart.plot(tree, type = 1)
rpart.plot(tree, type = 4)
rpart.plot(tree, type = 3)
tree <- rpart(charges ~ region + sex, data = health_insurance)
rpart.plot(tree, type = 3)
health_insurance
tree <- rpart(charges ~ bmi + sex, data = health_insurance)
rpart.plot(tree, type = 3)
?rpart
tree <- rpart(charges ~ bmi + sex, data = health_insurance, parms = c(alpha = 0))
rpart.plot(tree, type = 3)
auto_claim
data()
auto_claim
actuary_salaries
soa_mortality
library(ExamPAData)
insurance
soa_mortality
auto_claim
health_insurance
tree <- rpart(charges ~ smoker + age, data = health_insurance)
rpart.plot(tree, type = 3)
tree <- rpart(charges ~ smoker + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
tree <- rpart(charges ~ age + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
30 + 27 + 20 + 24
tree <- rpart(charges ~ sex + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
rpart.plot(tree, type = 3)
health_insurance
library(rpart)
library(rpart.plot)
tree <- rpart(charges ~ smoker + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
health_insurance %>%
ggplot(aes(charges, bmi)) +
geom_point()
library(tidyverse)
health_insurance %>%
ggplot(aes(charges, bmi)) +
geom_point()
tree <- rpart(charges ~ age + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
library(tidyverse)
tree <- rpart(charges ~ smoker + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(bmi_30, smoker) %>%
summarise(mean_claims = mean(charges))
library(scales)
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(bmi_30, smoker) %>%
summarise(mean_claims = dollar(mean(charges)))
library(kableExtra)
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(bmi_30, smoker) %>%
summarise(mean_claims = dollar(mean(charges))) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges))) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n))
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n())
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n))
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n))
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
pct = n()) %>%
mutate(pct = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
pct = n()) %>%
mutate(pct = pct/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
pct = n())
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = percent/sum(percent)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = percent(percent/sum(percent))) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n())
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n()) %>%
ungroup() %>%
mutate(percent = percent(n/sum(n))) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n()) %>%
ungroup() %>%
mutate(percent = round(n/sum(n)),2) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n()) %>%
ungroup() %>%
mutate(percent = round(n/sum(n),2)) %>%
select(-n) %>%
kable("html")
library(scales)
library(kableExtra)
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n()) %>%
ungroup() %>%
mutate(percent = round(n/sum(n),2)) %>%
select(-n) %>%
kable("html")
