facet_wrap(vars(distribution))
tibble(gaussian = rnorm(sample_size),
binomial = rbinom(sample_size, 5, 0.4),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density() +
facet_wrap(vars(distribution), scales = "free")
sample_size = 1000
tibble(gaussian = rnorm(sample_size),
binomial = rbinom(sample_size, 5, 0.4),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density() +
facet_wrap(vars(distribution), scales = "free")
library(magick)
image_read("images/response_distributions.png")
tibble(gaussian = rnorm(sample_size),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density() +
facet_wrap(vars(distribution), scales = "free")
?rbinom
tibble(binomial = rbinom(sample_size, 0.5),
poisson = rpois(sample_size, 1)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density() +
facet_wrap(vars(distribution), scales = "free")
?rbinom
tibble(binomial = rbinom(sample_size, 20,0.5),
poisson = rpois(sample_size, 1)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density() +
facet_wrap(vars(distribution), scales = "free")
tibble(binomial = rbinom(sample_size, 20,0.5),
poisson = rpois(sample_size, 1)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_histogram() +
facet_wrap(vars(distribution), scales = "free")
tibble(binomial = rbinom(sample_size, 20,0.5),
poisson = rpois(sample_size, 1)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_histogram() +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Discrete Distributions")
library(mgcv)
sample_size = 1000
tibble(gaussian = rnorm(sample_size),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density() +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Continuous Distributions")
tibble(binomial = rbinom(sample_size, 20,0.5),
poisson = rpois(sample_size, 1)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_histogram() +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Discrete Distributions")
tibble(gaussian = rnorm(sample_size),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density(fill = "blue", alpha = 0.2) +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Continuous Distributions")
library(ggpubr)
library(mgcv)
library(ggpubr)
sample_size = 1000
p1 <- tibble(gaussian = rnorm(sample_size),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density(fill = "blue", alpha = 0.2) +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Continuous Distributions")
p2 <- tibble(binomial = rbinom(sample_size, 20,0.5),
poisson = rpois(sample_size, 1)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_histogram() +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Discrete Distributions")
ggarrange(p1,p2)
ggarrange(p1,p2, nrow = 2)
library(mgcv)
library(ggpubr)
sample_size = 1000
p1 <- tibble(gaussian = rnorm(sample_size),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density(fill = "blue", alpha = 0.2) +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Continuous Distributions") +
xlab("")
p2 <- tibble(binomial = rbinom(sample_size, 20,0.5),
poisson = rpois(sample_size, 1)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_histogram() +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Discrete Distributions") +
xlab("")
ggarrange(p1,p2, nrow = 2)
library(mgcv)
library(ggpubr)
sample_size = 3000
p1 <- tibble(gaussian = rnorm(sample_size),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density(fill = "blue", alpha = 0.2) +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Continuous Distributions") +
xlab("")
p2 <- tibble(binomial = rbinom(sample_size, 20,0.5),
poisson = rpois(sample_size, 1)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_histogram() +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Discrete Distributions") +
xlab("")
ggarrange(p1,p2, nrow = 2)
library(magick)
image_read("images/response_distributions.png")
image_read("images/link_functions.png")
library(magick)
image_read("images/response_distributions.png")
image_read("images/link_functions.png")
image_read("images/discrete_link_functions.png")
image_read("images/discrete_link_functions.png")
image_read("images/discrete_link_functions.png")
names(health_insurance)
library(magick)
image_read("images/response_distributions.png") %>% image_scale("800")
rnorm(1)
?rnorm
dnorm(2)
tibble(x = seq(-3, 3, 0.5))
library(tidyverse)
tibble(x = seq(-3, 3, 0.5))
library(purrr)
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probability_of_response = map(z, ~dnorm(.x)))
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probability_of_response = map_dbl(z, ~dnorm(.x)))
qnorm(2)
qnorm(0.9)
pnorm(2)
pnorm(3)
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probability_of_response = map_dbl(z, ~pnorm(.x)))
arctan(2)
atan(2)
Pi
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2)
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(exp(-z))
)
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(exp(-z))
) %>%
gather(z, mean_response) %>%
ggplot(aes(z)) +
geom_line() +
facet_wrap(vars(mean_response))
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(exp(-z))
) %>%
gather(link_function, mean_response) %>%
ggplot(aes(z, mean_response)) +
geom_line() +
facet_wrap(vars(link_function))
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(exp(-z))
) %>%
gather(link_function, mean_response)
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(exp(-z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response)) +
geom_line() +
facet_wrap(vars(link_function))
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(exp(-z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response)) +
geom_line() +
facet_wrap(vars(link_function), scale = "free")
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(exp(-z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response)) +
geom_line() +
facet_wrap(vars(link_function), scale = "free")
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response)) +
geom_line() +
facet_wrap(vars(link_function), scale = "free")
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line()
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_linedraw()
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw()
tibble(z = seq(-3, 3, 0.5)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
tibble(z = seq(-3, 3, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
tibble(z = seq(-5, 5, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
library(purrr)
tibble(z = seq(-5, 5, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
tibble(z = seq(-9, 9, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
tibble(z = seq(-9, 9, 0.01)) %>%
mutate(
log = log(z),
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
tibble(z = seq(-9, 9, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
library(magick)
image_read("images/regression_metrics.png") %>% image_scale("800")
?AIC
?rmse
library(caret)
?metric
library(mgcv)
library(ggpubr)
sample_size = 3000
tibble(gaussian = rnorm(sample_size),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density(fill = "blue", alpha = 0.2) +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Continuous Distributions") +
xlab("")
library(mgcv)
library(ggpubr)
library(tidyverse)
sample_size = 3000
tibble(gaussian = rnorm(sample_size),
gamma = rgamma(sample_size, 1, 1/2),
inverse_gaussian = rig(sample_size, 1, 2)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_density(fill = "blue", alpha = 0.2) +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Continuous Distributions") +
xlab("")
image_read("images/response_distributions.png") %>% image_scale("800")
tibble(binomial = rbinom(sample_size, 20,0.5),
poisson = rpois(sample_size, 1)) %>%
gather(distribution, values) %>%
ggplot(aes(values)) +
geom_histogram() +
facet_wrap(vars(distribution), scales = "free") +
ggtitle("Discrete Distributions") +
xlab("")
image_read("images/discrete_link_functions.png") %>% image_scale("1200")
library(purrr)
tibble(z = seq(-9, 9, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
tibble(z = seq(-9, 9, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) %>%
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
tibble(z = seq(-9, 9, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
tibble(z = seq(-9, 9, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw(legend.position = "top") +
xlab("Z = Linear Predictor") +
ylab("Mean of Response")
tibble(z = seq(-9, 9, 0.01)) %>%
mutate(
logit = exp(z)/(1 + exp(z)),
probit = map_dbl(z, ~pnorm(.x)),
cauchit = 1/3.14*atan(z) + 1/2,
cloglog = 1 - exp(-exp(z))
) %>%
gather(link_function, mean_response, -z) %>%
ggplot(aes(z, mean_response, color = link_function)) +
geom_line() +
theme_bw() +
xlab("Z = Linear Predictor") +
ylab("Mean of Response") +
theme(legend.position = "top")
?BIC
tibble(x = -6:6,y = 1/(1 + exp(6:-6))) %>%
ggplot(aes(x,y)) +
geom_line(color = "red") +
xlab("x") +
ylab("g^-1(x)")
library(ExamPAData)
dim(soa_mortality)
dim(june_pa)
dim(auto_claim)
mean(health_insurance$charges)
getwd()
getwd()
file.path(book_dir,"images/link_functions.pdf")
book_dir <- "C:/Users/sam.castillo/Desktop/PA-MAS-R-Study-Manual"
file.path(book_dir,"images/link_functions.pdf")
R.Version()
install.packages(c("tidyverse", "caret", "broom", "randomForest", "bookdown", "pdp", "rpart", "rpart.plot"))
install.packages("remotes")
# Install remotes if it's not yet installed
# install.packages("remotes")
remotes::install_github("sdcastillo/ExamPAData")
install.packages(c("mgcv", "purrr", "pROC", "ISLR", "glmnet", "dplyr", "scales", "ggpubr", "gbm", "png", "devtools"))
install.packages("tinytex")
tinytex::install_tinytex()
devtools::install_github("hadley/emo")
emo::ji("poop")
emo::ji("ake
emo::ji("cake")
emo::ji("poop")
emo::ji("party")
emo::ji("cake")
emo::ji("relax")
emo::ji("beer")
