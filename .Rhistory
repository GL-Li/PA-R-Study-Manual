ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat), scales = "free")
tibble(y = exp(rnorm(1000))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = fct_relevel(stat, c("y","log_y"))) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat), scales = "free")
tibble(y = exp(rnorm(1000))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = fct_relevel(stat, c("y","log_y"))) %>%
mutate(stat = ifelse(stat == "y", "Before Log Transform", "After Log Transform")) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat), scales = "free") +
theme_minimal()
tibble(y = exp(rnorm(1000))) %>%
mutate(log_y = log(y)) %>%
gather(stat, value) %>%
mutate(stat = ifelse(stat == "y", "Before Log Transform", "After Log Transform") %>%
fct_relevel(c("Before Log Transform", "After Log Transform"))) %>%
ggplot(aes(value)) +
geom_histogram() +
facet_wrap(vars(stat), scales = "free") +
theme_minimal()
knitr::include_graphics("images/glm_links.png")
health_insurance
?rpart
tree <- rpart(charges ~ age + sex, data = health_insurance)
library(rpart)
tree <- rpart(charges ~ age + sex, data = health_insurance)
rpart.plot(tree)
library(rpart.plot)
tree <- rpart(charges ~ age + sex, data = health_insurance)
rpart.plot(tree)
?rpart.plot
rpart.plot(tree, type = 1)
rpart.plot(tree, type = 4)
rpart.plot(tree, type = 3)
tree <- rpart(charges ~ region + sex, data = health_insurance)
rpart.plot(tree, type = 3)
health_insurance
tree <- rpart(charges ~ bmi + sex, data = health_insurance)
rpart.plot(tree, type = 3)
?rpart
tree <- rpart(charges ~ bmi + sex, data = health_insurance, parms = c(alpha = 0))
rpart.plot(tree, type = 3)
auto_claim
data()
auto_claim
actuary_salaries
soa_mortality
library(ExamPAData)
insurance
soa_mortality
auto_claim
health_insurance
tree <- rpart(charges ~ smoker + age, data = health_insurance)
rpart.plot(tree, type = 3)
tree <- rpart(charges ~ smoker + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
tree <- rpart(charges ~ age + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
30 + 27 + 20 + 24
tree <- rpart(charges ~ sex + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
rpart.plot(tree, type = 3)
health_insurance
library(rpart)
library(rpart.plot)
tree <- rpart(charges ~ smoker + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
health_insurance %>%
ggplot(aes(charges, bmi)) +
geom_point()
library(tidyverse)
health_insurance %>%
ggplot(aes(charges, bmi)) +
geom_point()
tree <- rpart(charges ~ age + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
library(tidyverse)
tree <- rpart(charges ~ smoker + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(bmi_30, smoker) %>%
summarise(mean_claims = mean(charges))
library(scales)
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(bmi_30, smoker) %>%
summarise(mean_claims = dollar(mean(charges)))
library(kableExtra)
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(bmi_30, smoker) %>%
summarise(mean_claims = dollar(mean(charges))) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges))) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n))
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n())
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n))
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = n/sum(n))
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
pct = n()) %>%
mutate(pct = n/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
pct = n()) %>%
mutate(pct = pct/sum(n)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
pct = n())
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = percent/sum(percent)) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
percent = n()) %>%
mutate(percent = percent(percent/sum(percent))) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n())
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n()) %>%
ungroup() %>%
mutate(percent = percent(n/sum(n))) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n()) %>%
ungroup() %>%
mutate(percent = round(n/sum(n)),2) %>%
kable("html")
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n()) %>%
ungroup() %>%
mutate(percent = round(n/sum(n),2)) %>%
select(-n) %>%
kable("html")
library(scales)
library(kableExtra)
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n()) %>%
ungroup() %>%
mutate(percent = round(n/sum(n),2)) %>%
select(-n) %>%
kable("html")
git commit -m "glm chapters"
library(ExamPAData)
library(tidyverse)
model <- lm(data = health_insurance, formula = charges ~ bmi + age + sex)
pred = predict(model, health_insurance)
coefficients(model)
model <- lm(data = health_insurance, formula = charges ~ (bmi > 20) + age + sex)
pred = predict(model, health_insurance)
coefficients(model)
model <- lm(data = health_insurance, formula = (charges > 1000) ~ bmi + age + sex)
pred = predict(model, health_insurance)
coefficients(model)
model <- lm(data = health_insurance, formula = bmi + offset(age))
model <- lm(data = health_insurance, formula ~ bmi + offset(age))
model <- lm(data = health_insurance, formula ~ bmi + age)
model <- lm(data = health_insurance, formula = charges ~ bmi + age)
model <- lm(data = health_insurance, formula = charges ~ bmi + offset(age))
pred = predict(model, health_insurance)
coefficients(model)
| Formula | Meaning  |
|-------|---------|
| `charges` ~ `bmi` + `age` | Use `age` and `bmi` to predict `charges` |
| `charges` ~ `bmi` + `age` + `bmi`*`age` | Use `age`,`bmi` as well as an interaction to predict `charges` |
| `charges` ~ (`bmi > 20`) + `age` | Use an indicator variable for `bmi > 20` `age` to predict `charges` |
| `charges` ~ `bmi` + log(`age`) | Use `age` and `bmi` to predict `charges` |
library(ExamPAData)
library(tidyverse)
model <- lm(data = health_insurance, formula = charges ~ bmi + age)
pred = predict(model, health_insurance)
coefficients(model)
summary(model)
library(caret)
?createDataPartition
#create a train/test split
createDataPartition(y = health_insurance$charges, p = 0.8, list = F)
#create a train/test split
index <- createDataPartition(y = health_insurance$charges, p = 0.8, list = F)
health_insurance_train <-  health_insurance[index]
#create a train/test split
index <- createDataPartition(y = health_insurance$charges, p = 0.8, list = F) %>% as.numeric()
health_insurance_train <-  health_insurance[index]
index
health_insurance_train <-  health_insurance %>% slice(index)
health_insurance_train <-  health_insurance %>% slice(index)
health_insurance_test <- health_insurance %>% slice(-index)
model <- lm(data = health_insurance_train, formula = charges ~ bmi + age)
pred = predict(model, health_insurance_test)
model <- lm(data = health_insurance_train, formula = charges ~ bmi + age)
pred = predict(model, health_insurance_test)
get_rmse <- function(y, y_hat){
mean((y - y_hat)^2)
}
get_rmse(pred, health_insurance_test$charges)
get_rmse(mean(health_insurance_test$charges), health_insurance_test$charges)
get_rmse(mean(health_insurance_test$charges), health_insurance_test$charges)
get_rmse(pred, health_insurance_test$charges)
coefficients(model)
model_full_data <- lm(data = health_insurance, formula = charges ~ bmi + age)
model_test_data <-  lm(data = health_insurance_train, formula = charges ~ bmi + age)
model_full_data
model_full_data %>% summary()
model_test_data %>% summary()
model_test_data %>% tidy()
library(modelr)
model_full_data %>% tidy()
library(broom)
model_full_data %>% tidy()
model_full_data %>% tidy() %>% select(std.error)
model_test_data %>% tidy() %>% select(std.error)
model_full_data %>% tidy() %>% select(std.error)
model_test_data %>% tidy() %>% select(std.error)
model_full_data %>% tidy()
model_full_data %>% tidy() %>% select(term, std.error)
model_test_data %>% tidy() %>% select(term, std.error)
t
model_full_data %>% tidy() %>%
select(term, std.error) %>%
left_join(model_test_data %>% tidy() %>% select(term, std.error), by = "term")
model_full_data %>% tidy() %>%
select(term, std.error) %>%
left_join(model_test_data %>% tidy() %>% select(term, std.error), by = "term") %>%
rename(full_data = std.error.x, test_data = std.error.y)
model_full_data %>% tidy() %>%
select(term, std.error) %>%
left_join(model_test_data %>% tidy() %>% select(term, std.error), by = "term") %>%
rename(full_data = std.error.x, test_data = std.error.y) %>%
kable("html")
library(kableExtra)
model_full_data %>% tidy() %>%
select(term, std.error) %>%
left_join(model_test_data %>% tidy() %>% select(term, std.error), by = "term") %>%
rename(full_data = std.error.x, test_data = std.error.y) %>%
kable("html")
model_full_data %>% tidy() %>%
select(term, std.error) %>%
left_join(model_test_data %>% tidy() %>% select(term, std.error), by = "term") %>%
rename(full_data = std.error.x, test_data = std.error.y) %>%
mutate_if(is.numeric, ~round(.x, 1))
library(broom)
library(kableExtra)
model_full_data <- lm(data = health_insurance, formula = charges ~ bmi + age)
model_test_data <-  lm(data = health_insurance_train, formula = charges ~ bmi + age)
model_full_data %>% tidy() %>%
select(term, std.error) %>%
left_join(model_test_data %>% tidy() %>% select(term, std.error), by = "term") %>%
rename(full_data_std_error = std.error.x, test_data_std_error = std.error.y) %>%
mutate_if(is.numeric, ~round(.x, 1))
kable("html")
model_full_data <- lm(data = health_insurance, formula = charges ~ bmi + age)
model_test_data <-  lm(data = health_insurance_train, formula = charges ~ bmi + age)
library(broom)
library(kableExtra)
model_full_data %>% tidy() %>%
select(term, std.error) %>%
left_join(model_test_data %>% tidy() %>% select(term, std.error), by = "term") %>%
rename(full_data_std_error = std.error.x, test_data_std_error = std.error.y) %>%
mutate_if(is.numeric, ~round(.x, 1))
kable("html")
model_full_data
summary(model_full_data)
kableExtra::kable("html")
kableExtra::kable()
model_full_data %>% tidy() %>%
select(term, std.error) %>%
left_join(model_test_data %>% tidy() %>% select(term, std.error), by = "term") %>%
rename(full_data_std_error = std.error.x, test_data_std_error = std.error.y) %>%
mutate_if(is.numeric, ~round(.x, 1)) %>%
kableExtra::kable("html")
coefficients(model_full_data)
plot(model)
model <- lm(data = health_insurance_train, formula = charges ~ bmi + age)
pred = predict(model, health_insurance_test)
plot(model)
plot(model)[1]
plot(model)[[1]]
residual = resid(model)
tibble(residual, pred)
plot(model)
plot(model, which = 1)
plot(model, which = 2)
interactions
library(ExamPAData)
interactions
interactions %>%
ggplot(aes(age, actual, color = gender)) +
geom_line()
library(tidyverse)
interactions %>%
ggplot(aes(age, actual, color = gender)) +
geom_line()
interactions %>%
ggplot(aes(age, actual, color = gender)) +
geom_line() +
theme_minimal()
auto_claim
tree <- rpart(data = auto_claim,  CLM_AMTS ~ CAR_USE + CAR_TYPE + AGE + HOME_VAL + AREA)
library(rpart)
tree <- rpart(data = auto_claim,  CLM_AMTS ~ CAR_USE + CAR_TYPE + AGE + HOME_VAL + AREA)
tree <- rpart(data = auto_claim,  formula = CLM_AMTS ~ CAR_USE + CAR_TYPE + AGE + HOME_VAL + AREA)
auto_claim
tree <- rpart(data = auto_claim,  formula = CLM_AMT5 ~ CAR_USE + CAR_TYPE + AGE + HOME_VAL + AREA)
library(rpart.plot)
tree
plot(tree)
rpart.plot(tree)
tree <- rpart(data = auto_claim,  formula = CLM_AMT5 ~ CAR_USE + CAR_TYPE + AGE + HOME_VAL + AREA + BLUEBOOK)
rpart.plot(tree)
auto_claim %>%
ggplot(aes(CLM_AMT, BLUEBOOK)) +
geom_point()
auto_claim %>%
ggplot(aes(CLM_AMT, BLUEBOOK, color = CAR_USE)) +
geom_point()
auto_claim %>%
ggplot(aes(CLM_AMT, BLUEBOOK, color = CAR_TYPE)) +
geom_point()
auto_claim %>%
ggplot(aes(CLM_AMT, BLUEBOOK, color = CAR_TYPE)) +
geom_point() +
geom_smooth(method = "lm")
auto_claim %>%
ggplot(aes(CLM_AMT, BLUEBOOK, color = CAR_TYPE)) +
geom_point() +
geom_smooth(method = "lm", se = F)
auto_claim %>%
ggplot(aes(CLM_AMT, BLUEBOOK, color = CAR_TYPE)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_minimal()
auto_claim %>%
ggplot(aes(log(CLM_AMT), log(BLUEBOOK), color = CAR_TYPE)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_minimal()
auto_claim %>%
ggplot(aes(log(CLM_AMT), log(BLUEBOOK), color = CAR_TYPE)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_minimal()  +
labs(title = "Kelly Bluebook Value vs Claim Amount",
subtitle = "Interactions imply different slopes",
caption= "data: auto_claim")
interactions %>%
ggplot(aes(log(age), log(actual), color = gender)) +
geom_line() +
theme_minimal()
interactions %>%
ggplot(aes(age, actual, color = gender)) +
geom_line() +
theme_minimal()
interactions %>%
ggplot(aes(age, actual, color = gender)) +
geom_line() +
theme_minimal()
interactions %>%
ggplot(aes(age, actual, color = gender)) +
geom_line() +
theme_minimal() +
interactions %>%
ggplot(aes(age, actual, color = gender)) +
geom_line() +
theme_minimal() +
labs(title = "Kelly Bluebook Value vs Claim Amount",
subtitle = "Interactions imply different slopes",
caption= "data: auto_claim")
interactions %>%
ggplot(aes(age, actual, color = gender)) +
geom_line() +
theme_minimal() +
labs(title = "Kelly Bluebook Value vs Claim Amount",
subtitle = "Interactions imply different slopes",
caption= "data: auto_claim")
interactions %>%
ggplot(aes(age, actual, color = gender)) +
geom_line() +
theme_minimal() +
labs(title = "Age vs. Actual by Gender",
subtitle = "Interactions imply different slopes",
caption= "data: interactions")
auto_claim %>%
ggplot(aes(log(CLM_AMT), log(BLUEBOOK), color = CAR_TYPE)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
theme_minimal()  +
labs(title = "Kelly Bluebook Value vs Claim Amount",
subtitle = "Interactions imply different slopes",
caption= "data: auto_claim")
model <- glm(data = auto_claim,
formula = log(CLM_AMT) ~ log(BLUEBOOK) + CAR_TYPE + CAR_TYPE*log(BLUEBOOK))
model <- glm(data = auto_claim %>% filter(CLM_AMT > 0),
formula = log(CLM_AMT) ~ log(BLUEBOOK) + CAR_TYPE + CAR_TYPE*log(BLUEBOOK))
summary(model)
auto_claim
model <- glm(
log(CLM_FRQ5) ~ log(BLUEBOOK) + log(AGE) + CAR_TYPE + AREA,
data = auto_claim
)
model <- glm(
formula = log(CLM_FRQ5) ~ log(BLUEBOOK) + log(AGE) + CAR_TYPE + AREA,
data = auto_claim
)
auto_claim
model <- glm(
formula = log(CLM_FREQ5) ~ log(BLUEBOOK) + log(AGE) + CAR_TYPE + AREA,
data = auto_claim
)
model <- glm(
formula = CLM_FREQ5 ~ log(BLUEBOOK) + log(AGE) + CAR_TYPE + AREA,
data = auto_claim,
family = "Poisson"
)
model <- glm(
formula = CLM_FREQ5 ~ log(BLUEBOOK) + log(AGE) + CAR_TYPE + AREA,
data = auto_claim,
family = poisson
)
auto_claim
model
auto_claim
insurance
