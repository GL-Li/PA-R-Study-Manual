mutate(region = as.factor(region),
smoker = as.factor(smoker)) %>%
summary()
health_insurance %>%
ggplot(aes(charges)) +
geom_histogram()
health_insurance$charges %>% summary()
health_insurance %>%
ggplot(aes(charges)) +
geom_histogram() +
facet_wrap(vars(region))
health_insurance %>%
filter(region == "northeast") %>%
ggplot(aes(charges)) +
geom_histogram()
health_insurance %>%
filter(region == "northwest") %>%
ggplot(aes(charges)) +
geom_histogram()
health_insurance %>%
mutate(age_bucket = case_when(age < 24 ~ 1,
age <= 36 ~ 2,
age <= 50 ~ 3,
age > 50 ~ 4))
health_insurance %>%
mutate(age_bucket = case_when(age < 24 ~ 1,
age <= 36 ~ 2,
age <= 50 ~ 3,
age > 50 ~ 4)) %>%
summary()
health_insurance %>%
mutate(age_bucket = case_when(age < 24 ~ 1,
age <= 36 ~ 2,
age <= 50 ~ 3,
age > 50 ~ 4)) %>%
summary()
health_insurance %>%
mutate(age_bucket = case_when(age < 24 ~ 1,
age <= 36 ~ 2,
age <= 50 ~ 3,
age > 50 ~ 4)) %>%
count(age_bucket)
health_insurance %>%
mutate(age_bucket = case_when(age < 24 ~ 1,
age <= 36 ~ 2,
age <= 50 ~ 3,
age > 50 ~ 4),
age_household_ratio = (1 + children)/age,
log_household_size = log(1 + children)) %>%
summary()
health_insurance <- health_insurance %>%
mutate(age_bucket = case_when(age < 24 ~ 1,
age <= 36 ~ 2,
age <= 50 ~ 3,
age > 50 ~ 4),
age_household_ratio = (1 + children)/age,
log_household_size = log(1 + children))
health_insurance <- health_insurance %>%
mutate(age_bucket = case_when(age < 24 ~ 1,
age <= 36 ~ 2,
age <= 50 ~ 3,
age > 50 ~ 4),
age_household_ratio = (1 + children)/age,
log_household_size = log(1 + children)) %>%
select(-children)
library(caret)
#create a train/test split
index <- createDataPartition(y = health_insurance$charges, list = F) %>% as.numeric()
train <-  health_insurance %>% slice(index)
test <- health_insurance %>% slice(-index)
?createDataPartition
library(caret)
#create a train/test split
index <- createDataPartition(y = health_insurance$charges, list = F, p = 0.8) %>% as.numeric()
train <-  health_insurance %>% slice(index)
test <- health_insurance %>% slice(-index)
nrow(train) + nrow(test) == nrow(health_insurance)
nrow(train)/nrow(health_insurance)
model = glm(formula = charges ~ .,
family = gaussian(link = "log"),
data = train)
pred = predict(model, test, type = "response")
get_rmsle(pred, test$charges)
health_insurance %>% qplot(charges)
health_insurance %>% ggplot(aes(charges)) + geom_histogram()
health_insurance %>% ggplot(aes(log(charges)) + geom_histogram()
health_insurance %>% ggplot(aes(log(charges))) + geom_histogram()
health_insurance %>% ggplot(aes(log(charges))) + geom_histogram()
?glm
model = glm(formula = charges ~ .,
family = Gaussian(link = "log"),
data = train)
model = glm(formula = charges ~ .,
family = Gamma(link = "log"),
data = train)
pred = predict(model, test, type = "response")
get_rmsle(pred, test$charges)
model = glm(formula = charges ~ .,
family = gaussian(link = "log"),
data = train)
pred = predict(model, test, type = "response")
get_rmsle(pred, test$charges)
model = glm(formula = charges ~ .,
family = Gamma(link = "log"),
data = train)
pred = predict(model, test, type = "response")
get_rmsle(pred, test$charges)
model = glm(formula = charges ~ .,
family = inverse.gaussian(link = "log"),
data = train)
pred = predict(model, test, type = "response")
get_rmsle(pred, test$charges)
model = glm(formula = charges ~ .,
family = Gamma(link = "log"),
data = train)
pred = predict(model, test, type = "response")
get_rmsle(pred, test$charges)
summary(model)
model = glm(formula = charges ~ age + sex + bmi + smoker + (region=="southeast") + (region=="southwest"),
family = Gamma(link = "log"),
data = train)
pred = predict(model, test, type = "response")
get_rmsle(pred, test$charges)
summary(model)
train$sex %>% summary()
train$sex %>% levels()
get_rmsle(pred, test$charges)
summary(model)
knitr::include_graphics("images/gitbook_pull_request.png")
knitr::include_graphics("images/gitbook_pull_request.png")
knitr::include_graphics("images/gitbook_pull_request.png")
knitr::include_graphics("images/gitbook_pull_request.png")
library(bookdown)
publish_book()
knitr::include_graphics("images/gitbook_pull_request.png")
knitr::include_graphics("images/gitbook_pull_request.png")
install.packages("formatR")
library(tidyverse)
library(ExamPAData)
data <- health_insurance %>%
select(age, sex, charges) %>%
rename(claims = charges)
data %>% summary()
data %>% dim()
data %>% ggplot(aes(claims)) + geom_histogram()
model = lm(claims ~ age + sex, data = data)
coefficients(model)
library(randomForest)
tree <- rpart(charges ~ age + bmi, data = health_insurance)
library(ExamPAData)
library(tidyverse)
library(rpart)
library(rpart.plot)
tree <- rpart(charges ~ smoker + bmi, data = health_insurance)
rpart.plot(tree, type = 3)
library(scales)
library(kableExtra)
health_insurance %>%
mutate(bmi_30 = ifelse(bmi < 30, "bmi < 30", "bmi >= 30")) %>%
group_by(smoker,bmi_30) %>%
summarise(mean_claims = dollar(mean(charges)),
n = n()) %>%
ungroup() %>%
mutate(percent = round(n/sum(n),2)) %>%
select(-n) %>%
kable("markdown")
tree <- rpart(formula = charges ~  ., data = health_insurance,
control = rpart.control(cp = 0.003))
rpart.plot(tree, type = 3)
tree <- rpart(formula = charges ~  ., data = health_insurance,
control = rpart.control(cp = 0.0001))
cost <- tree$cptable %>%
as_tibble() %>%
select(nsplit, CP, xerror)
cost %>% head()
cost %>%
filter(nsplit > 1) %>%
mutate(min = ifelse(xerror == min(cost$xerror),"y", "n")) %>%
ggplot(aes(nsplit, xerror, color = min)) +
geom_line() +
geom_point() +
theme_bw() +
theme(legend.position = "none") +
scale_color_manual(values = c("black", "red")) +
annotate("text", x = 25, y = 0.17, label = "Minimum Error", color = "red")
tree$cptable %>%
as_tibble() %>%
select(nsplit, CP, xerror) %>%
arrange(xerror) %>%
head()
pruned_tree <- prune(tree,
cp = tree$cptable[which.min(tree$cptable[, "xerror"]), "CP"])
library(caret)
set.seed(42)
index <- createDataPartition(y = health_insurance$charges,
p = 0.8, list = F)
train <- health_insurance %>% slice(index)
test <- health_insurance %>% slice(-index)
simple_tree <- rpart(formula = charges ~  .,
data = train,
control = rpart.control(cp = 0.0001,
minbucket = 200,
maxdepth = 10))
rpart.plot(simple_tree, type = 3)
tree_pred <- predict(tree, test)
simple_tree_pred <- predict(simple_tree, test)
get_rmsle <- function(y, y_hat){
sqrt(mean((log(y) - log(y_hat))^2))
}
get_rmsle(test$charges, tree_pred)
get_rmsle(test$charges, simple_tree_pred)
get_rmsle(test$charges, mean(train$charges))
library(randomForest)
tree <- rpart(charges ~ age + bmi, data = health_insurance)
df <- health_insurance %>% mutate(
prediction = predict(tree, health_insurance))
p1 <- df %>%
ggplot(aes(bmi, age, color = prediction)) +
geom_point() +
theme_bw() +
labs(title ="Decision Tree") +
theme(legend.position = "none")
rf <- randomForest(charges ~ age + bmi,
data = health_insurance, ntree = 50)
df <- health_insurance %>% mutate(
prediction = predict(rf, health_insurance))
p2 <- df %>%
ggplot(aes(bmi, age, color = prediction)) +
geom_point() +
theme_bw() +
labs(title ="Random Forest") +
theme(legend.position = "none")
library(ggpubr)
ggarrange(p1,p2)
library(bookdown)
pdf_book()
publish_book()
library(ExamPAData)
actuary_salaries %>% glimpse()
library(ExamPAData)
library(tidyverse)
actuary_salaries %>% glimpse()
actuary_salaries %>% count(industry)
actuary_salaries %>% summary()
actuary_salaries %>%
modify(industry, as.factor) %>%
summary()
actuary_salaries %>%
modify_at("industry", as.factor) %>%
summary()
actuary_salaries %>%
mutate(salary_high = as.numeric(salary_high))
actuary_salaries <- actuary_salaries %>%
mutate(salary_high = as.numeric(salary_high))
actuary_salaries %>%
filter(industry == "health")
actuary_salaries %>%
filter(industry == "Health")
actuary_salaries %>%
filter(industry == "Health", exams == 5)
actuary_salaries %>%
filter(industry == "Health", exams == 5) %>%
summarise(high = max(salary_high),
low = min(salary_low))
actuary_salaries %>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries <- actuary_salaries%>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries %>%
group_by(industry) %>%
summarise(high_salary_mid = max(salary_mid),
high_salary_high = max(salary_high),
low_salary_low = min(salary_low))
actuary_salaries %>%
filter(salary_low == 11)
actuary_salaries <- actuary_salaries %>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_low == 66, 166, salary_low))
actuary_salaries <- actuary_salaries %>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_low == 66, 166, salary_low)) %>%
filter(salary_low == 11)
actuary_salaries %>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_low == 66, 166, salary_low)) %>%
filter(salary_low == 11)
library(ExamPAData)
library(tidyverse)
actuary_salaries %>% glimpse()
actuary_salaries %>% count(industry)
actuary_salaries %>%
modify_at("industry", as.factor) %>%
summary()
actuary_salaries <- actuary_salaries %>%
mutate(salary_high = as.numeric(salary_high))
actuary_salaries %>%
filter(industry == "Health", exams == 5) %>%
summarise(high = max(salary_high),
low = min(salary_low))
actuary_salaries <- actuary_salaries%>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries %>%
group_by(industry) %>%
summarise(high_salary_mid = max(salary_mid),
high_salary_high = max(salary_high),
low_salary_low = min(salary_low))
actuary_salaries %>%
filter(salary_low == 11)
actuary_salaries %>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_low == 66, 166, salary_low)) %>%
filter(salary_low == 11)
library(ExamPAData)
actuary_salaries
actuary_salaries
library(ExamPAData)
library(ExamPAData)
library(tidyverse)
actuary_salaries %>% glimpse()
rm(list = ls())
library(ExamPAData)
actuary_salaries
ADSFLADFL
rm(list = ls())
library(ExamPAData)
library(tidyverse)
actuary_salaries %>% glimpse()
actuary_salaries %>% count(industry)
actuary_salaries <- actuary_salaries %>%
mutate(salary_high = as.numeric(salary_high))
actuary_salaries %>%
filter(industry == "Health", exams == 5)
actuary_salaries %>%
filter(industry == "Health", exams == 5) %>%
summarise(high_salary_high = max(salary_high),
low_salary_low = min(salary_low))
actuary_salaries %>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries <- actuary_salaries%>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries %>%
group_by(industry) %>%
summarise(high_salary_mid = max(salary_mid),
high_salary_high = max(salary_high),
low_salary_low = min(salary_low))
actuary_salaries %>%
filter(salary_low == 11)
actuary_salaries %>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_high == 66, 166, salary_high))
actuary_salaries <- actuary_salaries%>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_high == 66, 166, salary_high))
actuary_salaries %>%
group_by(industry) %>%
summarise(high_salary_mid = max(salary_mid),
high_salary_high = max(salary_high),
low_salary_low = min(salary_low))
actuary_salaries
?case_when
?substr
actuary_salaries %>%
mutate(n_exams = case_when(exams == "FSA" ~ 10,
exams == "ASA" ~ 7,
exams == "FCAS" ~ 10,
exams == "ACAS" ~ 7,
TRUE ~ as.numeric(substr(exams,1,1))))
actuary_salaries %>%
mutate(n_exams = case_when(exams == "FSA" ~ 10,
exams == "ASA" ~ 7,
exams == "FCAS" ~ 10,
exams == "ACAS" ~ 7,
TRUE ~ as.numeric(substr(exams,1,1)))) %>%
count(n_exams)
actuary_salaries <- actuary_salaries %>%
mutate(n_exams = case_when(exams == "FSA" ~ 10,
exams == "ASA" ~ 7,
exams == "FCAS" ~ 10,
exams == "ACAS" ~ 7,
TRUE ~ as.numeric(substr(exams,1,1))))
sum(is.na(actuary_salaries))
actuary_salaries %>%
mutate(social_life = n_exams/experience) %>%
group_by(industry) %>%
summarise(mean = mean(social_life))
asdfads
2+2
library(ExamPAData)
library(tidyverse)
actuary_salaries
View(actuary_salaries)
actuary_salaries %>% View()
actuary_salaries %>% glimpse()
actuary_salaries %>% mutate(salary_high = as.numeric(salary_high))
actuary_salaries <- actuary_salaries%>% mutate(salary_high = as.numeric(salary_high))
actuary_salaries %>%
filter(industry == "Health", exams == 5)
actuary_salaries %>%
filter(industry == "Health", exams == 5) %>%
summarise(max_salary_high = max(salary_high),
low_salary_low = min(salary_low))
actuary_salaries %>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries <- actuary_salaries%>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries %>%
group_by(industry) %>%
summarise(high_salary_mid = max(salary_mid),
high_salary_high = max(salary_high),
low_salary_low = min(salary_low))
rm(list = ls())
library(ExamPAData)
library(tidyverse)
actuary_salaries %>% glimpse()
actuary_salaries <- actuary_salaries%>% mutate(salary_high = as.numeric(salary_high))
actuary_salaries %>%
filter(industry == "Health", exams == 5) %>%
summarise(max_salary_high = max(salary_high),
low_salary_low = min(salary_low))
actuary_salaries <- actuary_salaries%>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries %>%
group_by(industry) %>%
summarise(high_salary_mid = max(salary_mid),
high_salary_high = max(salary_high),
low_salary_low = min(salary_low))
actuary_salaries %>%
filter(salary_low == 1)
actuary_salaries %>%
filter(salary_low == 11)
actuary_salaries %>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_high == 66, 166, salary_high))
actuary_salaries <- actuary_salaries%>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_high == 66, 166, salary_high))
actuary_salaries %>%
group_by(industry) %>%
summarise(high_salary_mid = max(salary_mid),
high_salary_high = max(salary_high),
low_salary_low = min(salary_low))
?case_when
actuary_salaries
?substr
actuary_salaries <- actuary_salaries %>%
mutate(n_exams = case_when(exams == "FSA" ~ 10,
exams == "ASA" ~ 7,
exams == "FCAS" ~ 10,
exams == "ACAS" ~ 7,
TRUE ~ as.numeric(substr(exams,1,1))))
actuary_salaries %>%
count(n_exams)
sum(is.na(actuary_salaries))
actuary_salaries %>%
mutate(social_life = n_exams/experience)
actuary_salaries %>%
mutate(social_life = n_exams/experience) %>%
group_by(industry) %>%
summarise(social_life = mean(social_life))
rm(list = ls())
asdflasdflafd
234092384
2 + 2
library(ExamPAData)
library(tidyverse)
actuary_salaries
actuary_salaries %>% View()
actuary_salaries %>% glimpse()
actuary_salaries <- actuary_salaries %>%
mutate(salary_high = as.numeric(salary_high))
actaury_salaries %>%
filter(industry == "Health", exams == 5)
actuary_salaries %>%
filter(industry == "Health", exams == 5)
actuary_salaries %>%
filter(industry == "Health", exams == 5) %>%
summarise(high = max(salary_high),
low = min(salary_low))
actuary_salaries %>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries <- actuary_salaries %>%
mutate(salary_mid = (salary_low + salary_high)/2)
actuary_salaries %>%
group_by(industry) %>%
summarise(high_salary_mid = max(salary_mid),
high_salary_high = max(salary_high),
low_salary_low = min(salary_low))
View(actuary_salaries)
View(actuary_salaries)
actuary_salaries %>%
filter(salary_low == 11)
actuary_salaries %>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_high == 66, 166, salary_high))
actuary_salaries <- actuary_salaries%>%
mutate(salary_low = ifelse(salary_low == 11, 114, salary_low),
salary_high = ifelse(salary_high == 66, 166, salary_high))
?case_when
?substr
actuary_salaries <- actuary_salaries %>%
mutate(n_exams = case_when(exams == "FSA" ~ 10,
exams == "ASA" ~ 7,
exams == "FCAS" ~ 10,
exams == "ACAS" ~ 7,
TRUE ~ as.numeric(substr(exams,1,1))))
sum(is.na(actuary_salaries))
actuary_salaries %>%
count(n_exams)
actuary_salaries %>%
mutate(social_life = n_exams/experience) %>%
group_by(industry) %>%
summarise(social_life = mean(social_life))
